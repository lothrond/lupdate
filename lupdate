#!/bin/bash
#  Copyright (C) 2019, lothrond <lothrond@posteo.us>
#
#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see <https://www.gnu.org/licenses/>.

## BEGIN DEFAULT ENVIRONMENT

[ $LUPDATE_LIBDIR ] || \
    LUPDATE_LIBDIR=/usr/local/src/lupdate

[ $LUPDATE_GITDIR ] || \
    LUPDATE_GITDIR=( ~/source )

## END DEFAULT ENVIRONMENT

# suppliment root with sudo
if [ $UID -ne 0 ]; then
    ssu=sudo
fi

# colors
col0="\e[31m"
col1="\e32m"
res="\e0m"

# return values
RET1="${col0}Failed${res}"
RET0="${col1}Successfuss${res}

# set default return value to failed.
# (for ctrl-c interrrupts, etc)
ret=RET1

#---------------------------------------------------------------------------
# For every file type, source functions for operations, perform operations,
# and then return user values (success/fail).
#---------------------------------------------------------------------------

# apt
function update_apt_sources() {
    if ${ssu} ${LUPDATE_LIBDIR}/apt_update.sh; then
        apt_ret=RET0
    else
        apt_ret=RET1
    fi
}

# deb
#...

# flatpak
#...

# git
function update_git_sources() {
    if ${LUPDATE_LIBDIR}/git_update.sh; then
        return 0
    fi

    return 1
}

# pip
function update_pip_sources() {
    if ${LUPDATE_LIBDIR}/pip_update.sh; then
        return 0
    fi

    return 1
}

# check return values
function check_all_returns() {
    echo -e "Update all apt sources: ${apt_ret}"
}

# program usage information
function show_usage() {
    echo ${PROG} - ${DESC}
    echo
    echo "USAGE:"
    echo "   ${PROG} [OPTION]"
    echo
    echo "OPTIONS:"
    echo ""
    echo
    echo "EXAMPLES:"
    echo ""
    echo
}

# global options
PROG=$(basename $0)
DESC=''
uopt=""
gopt=""
opt=$(getopt -o $uopt -l $gopt -n "$PROG" -- "$@")
[ $? -eq 0 ] || { exit 1 ;}

# runtime
if [ $# -eq 0 ]; then
    show_usage; exit 1
fi

while :; do case "$1" in
    *) show_usage; exit 1; break;;
esac done

exit $?